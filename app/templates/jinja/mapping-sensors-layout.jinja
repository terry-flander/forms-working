<html>
<head>
    <title>Mapping: Pre-Packaged Sensors {{data.eloque_id}}</title>
    <link rel="stylesheet" href="/app/static/dis_menu.css">
    <script type="text/javascript" charset="utf8" src="/app/static/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.11.3/datatables.min.css"/>
    <script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.11.3/datatables.min.js"></script>
    <script type="text/javascript" charset="utf8" src="/app/static/svg_lib.js"></script>
    <script type="text/javascript" charset="utf8" src="/app/static/std_lib.js"></script>
</head>
<body>
    <header>
        <div class="container">
            <a href="/app">
                <img src="/app/static/logo-new.png" style="height: 53px; padding-top: 11px; padding-left: 24px;" />
            </a>
            <h1 class="logo"> {{data.eloque_id}} - Mapping: Pre-Packaged Sensors Layout</h1>
        </div>
    </header>
    {% set ns = namespace(items=0) %}

    <div class="container">
    <h1>Deployment</h1>
    <table id="deployment">
        <tr><td>Index ID</td><td>{{data.eloque_id}}</td><td></td></tr>
        <tr><td>Asset ID</td><td>{{data.asset_id}}</td><td></td></tr>
        <tr><td>Sharepoint Name</td><td>{{data.sharepoint_name}}</td><td></td></tr>
        <tr><td>Excel Version</td><td>1.1.0</td><td></td></tr>
        <tr><td>Asset</td><td>{{data.asset_name}}</td><td></td></tr>
        <tr><td>RSA structure number</td><td>{{data.structure_id}}</td><td></td></tr>
        <tr><td>Type</td><td>Type</td><td></td></tr>
        <tr><td>FiAsset Type</td><td>{% for c in data.classification %}{{c}} {% endfor %}</td><td></td></tr>
        <tr><td>Number of Spans</td><td>{{data.totalSpans}}</td><td></td></tr>
        <tr><td>Deck Width (m)</td><td>{{data.deckWidth}}</td><td></td></tr>
        <tr><td>FiAsset Status</td><td>Status</td><td></td></tr>
        <tr><td>FiAsset Built</td><td>Build Date</td><td></td></tr>
        <tr><td>Coordinates</td><td>{{data.coordinates_latitude}}</td></td><td>{{data.coordinates_longitude}}</td></tr>
        <tr><td>Feature crossed</td><td>{{data.feature_crossed}}</td><td></td></tr>
        <tr><td>Road name</td><td>{{data.road_name}}</td><td></td></tr>
        <tr><td>Skew angle</td><td>{{data.skew_angle}}</td></tr>
        <tr><td><b>Directions mapping</b><td></td></td><td></td></tr>
        <tr><td><i>Internal</i></td><td><i>External</i></td><td></td></tr>
        <tr><td>up</td><td>{{data.up.label}}</td><td></td></tr>
        <tr><td>left</td><td>{{data.left.label}}</td><td></td></tr>
        <tr><td>right</td><td>{{data.right.label}}</td><td></td></tr>
        <tr><td>down</td><td>{{data.down.label}}</td><td></td></tr>
        <tr><td>LEFT2RIGHT</td><td>{{data.left2right}}</td><td></td></tr>
        <tr><td>RIGHT2LEFT</td><td>{{data.right2left}}</td><td></td></tr>
    </table>

    <h1>Lanes</h1>
    <table id="lanes" class="display">
        <thead>
            <tr><th>Transverse ID</th><th>Direction</th><th>Type</th><th>Lane ID</th><th>Width (m)</th><th>Transverse Coordinates(m)</th></tr>
        </thead>
        <tbody>
    {% for l in data.lanes %}
            <tr>
                <td>{{l.transverse_id}}</td>
                <td>{{l.lane_direction}}</td>
                <td>{{l.laneType}}</td>
                <td>{{l.lane_id.label}}</td>
                <td>{{l.lane_width}}</td>
                <td>{{l.transverse_coordinates}}</td>
            </tr>
    {% endfor %} 
        </tbody>
    </table>

    <h1>Structure</h1>
    <table id="structure" class="display">
        <thead>
            <tr><th>Component</th><th>Type</th><th>Length</th><th>Height</th><th>Width</th><th>Lane</th></tr>
        </thead>
        <tbody>
    {% for c in data.structure %}
        {% set ns.component_type = {} %}
            {% if c.componentType.value %}
            {% for x in data.componentTypes if x.componentType == c.componentType.value %}{% set ns.component_type = x %}{% endfor %}
            {% else %}
            {% for x in data.componentTypes if x.componentType == c.componentType %}{% set ns.component_type = x %}{% endfor %}
            {% endif %}
            <tr>
                <td>{{c.componentId}}</td>
                <td>{{c.componentType.value}}</td>
                <td>{{ns.component_type.length}}</td>
                <td>{{ns.component_type.height}}</td>
                <td>{{ns.component_type.width}}</td>
                <td>{% if c.superstructureLane %}{{c.superstructureLane.value}}{% endif %}</td>
            </tr>
    {% endfor %} 
        </tbody>
    </table>

    <h1>Component Types</h1>
    <table id="componentTypes" class="display">
        <thead>
            <tr>
            <th>Component Type</th><th>Type</th><th>SubType</th><th>Youngs</th><th>Shear</th><th>Density</th>
            <th>Moment</th><th>Area</th><th>Flange Width 1</th><th>Flange Width 2</th><th>Length</th><th>Height</th><th>Width</th>
            </tr>
        </thead>
        <tbody>
    {% for c in data.componentTypes %}
            <tr>
                <td>{{c.componentType}}</td>
                <td>{{c.structureType}}</td>
                <td>{{c.structureSubType}}</td>
                <td>{{c.effective_youngs_modulus}}</td>
                <td>{{c.effective_shear_modulus}}</td>
                <td>{{c.weight}}</td>
                <td>{{c.effective_area_moment_of_inertia}}</td>
                <td>{{c.effective_area}}</td>
                <td>{{c.flangeWidth1}}</td>
                <td>{{c.flangeWidth2}}</td>
                <td>{{c.length}}</td>
                <td>{{c.height}}</td>
                <td>{{c.width}}</td>
            </tr>
    {% endfor %} 
        </tbody>
    </table>

    <h1>Channels/Sensors</h1>
    <table id="fibers" class="display">
        <thead>
            <tr>
                <th>Channel</th><th>Component</th><th>Location</th><th>Model</th><th>Sensor Numbers</th><th>Vertical Spacing</th>
            </tr>
        </thead>
        <tbody>
    {% for c in data.channels %}
        {% for s in c.sensors %}
            {% if s.componentId %}
                <tr>
                    <td>{{c.channelId}}</td>
                    <td>{{s.componentId['value']}}</td>
                    <td>{{s.location}}</td>
                    <td>{{s.sensor_model}}</td>
                    <td>
                    {% for sn in s.sensor_numbers.split(",") %}
                        S{{c.channelId[-1:]}}-{{sn}}&nbsp;
                    {% endfor %}
                    </td>
                    <td>{{s.vertical_spacing}}</td>
                </tr>
            {% endif %}
        {% endfor %}
    {% endfor %}
        </tbody>
    </table>

    <svg id="cont" height="5000" width="5000"
        xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    </svg>
    </div>
    <script>
        $(document).ready( function () {
            $('#lanes').DataTable({"order": []});
            $('#structure').DataTable({"order": []});
            $('#componentTypes').DataTable({"order": []});
            $('#fibers').DataTable({"order": []});
            $('#deflection').DataTable({"order": []});
            $('#shear').DataTable({"order": []});
            $('#bending_moment').DataTable({"order": []});
        } );

        function build_xls() {
            let payload = [];
            payload.push(convert_table_to_csv("deployment"));
            payload.push(convert_table_to_csv("lanes"));
            payload.push(convert_table_to_csv("structure"));
            payload.push(convert_table_to_csv("componentTypes"));
            payload.push(convert_table_to_csv("fibers"));
            payload.push(convert_table_to_csv("deflection"));
            payload.push(convert_table_to_csv("shear"));
            payload.push(convert_table_to_csv("bending_moment"));
            download_tables(payload)
        }

        function drawStuff() {
            let count = -1;
            let scalex = 1;
            let scaley = 1;
            let origin = 0;

    {% for c in data.components %}
            {% set jinja_template = data.jinja_template %}
            {% set component_types = [] %}
            {% set ns.component_type = {} %}
            {% if c.componentType.value %}
            {% for x in data.componentTypes if x.componentType == c.componentType.value %}{% set ns.component_type = x %}{% endfor %}
            {% else %}
            {% for x in data.componentTypes if x.componentType == c.componentType %}{% set ns.component_type = x %}{% endfor %}
            {% endif %}
            {% set height = ns.component_type.height %}
            {% set length = ns.component_type.length %}
            add_component('{{c.component_id}}', 'type', count, '{{length}}', '{{height}}');
            scalex = (9.0 / {{length}});
            scaley = (0.81 / {height}});
        {% for f in data.all_fibers %}
            {% if data[f] %}
                {% set fiber = data[f] %}
                {% for s in fiber %}
                {% if s.sensor_type and s.component_id ==  c.component_id %}
            origin = {{s.y}};
            if ('{{jinja_template}}' != 'v1.1') {
                origin = {{height}} - {{s.y}};
            }
            add_sensor('{{fiber[0].fiber}}', {{s.x}}, {{s.y}}, '{{s.sensor}}', '{% if s.sensor_type.startswith('girder') %}girder{% else %}{{s.sensor_type}}{% endif %}', {{s.angle}}, count, scalex, scaley, origin, '{{s.side}}');
                {% endif %}
            {% endfor %}
            {% endif %}
        {% endfor %}
            count += 1;
    {% endfor %}

    {% set jinja_template = data.jinja_template %}
       count = -1;
    {% for f in data.all_fibers %}
        {% if data[f] and data[f][0].fiber != '' %}
        // {{data[f][0].fiber}}
            {% set fiber = data[f] %}
            {% set ns.componentId = "" %}
            {% set ns.side = "" %}
            add_fiber('{{fiber[0].fiber}}', count + 1);
            {% for s in fiber %}
                {% if s.sensor_type and (s.component_id != ns.componentId) %}
                    {% for c in data.structure %}
                        {% if s.component_id == c.componentId %}
                            {% set ns.component_type = {} %}
                            {% if c.componentType.value %}
                            {% for x in data.componentTypes if x.componentType == c.componentType.value %}{% set ns.component_type = x %}{% endfor %}
                            {% else %}
                            {% for x in data.componentTypes if x.componentType == c.componentType %}{% set ns.component_type = x %}{% endfor %}
                            {% endif %}
                            {% set height = ns.component_type.height %}
                            {% set length = ns.component_type.length %}
                            {% set ns.height = height %}
                            scalex = (9.0 / {{length}});
                            scaley = (0.81 / {{height}});
                            count += 1;
                            add_component('{{c.componentId}}', '{{c.componentType.value}}', count, '{{length}}', '{{height}}');
                        {% if 'Girder' in c.componentType.value %}
                            add_image('../../static/BottomUp.png', count, '{{length}}', '{{height}}')
                        {% endif %}
                            {% set ns.componentId = s.component_id %}
                            {% set ns.side = s.side %}
                        {% endif %}
                    {% endfor %}
                {% endif %}
                origin = {{ns.height}} - {{s.y}};
                add_sensor('{{fiber[0].fiber}}', {{s.x}}, {{s.y}}, '{{s.sensor}}', '{{s.sensor_type}}', {{s.angle}}, count, scalex, scaley, origin, '{{s.side}}');
            {% endfor %}
            draw_fiber('{{f}}');
        {% endif %}
    {% endfor %}
        }
        drawStuff();
    </script>
</body>
</html>
